1 container mx-auto max-w-screen-xl;
2 reduce js property;
3 line-clamb tailwind property;


 ()=> {
    return ()
 }


  box-shadow: 10px 10px gray

  {/* <button onClick={handleLogOut} className="uppercase text-sm px-5 py-2 font-bold text-white w-[70%] bg-orange-600">
                        LogOut
                    </button> */}

                    <button onClick={handleAuth} className="uppercase text-sm px-5 py-2 font-bold text-white w-[70%] bg-orange-600 ">
                        logIn
                    </button>
                    Non Veg Roll


                    { card: { card: { info: { imageId, id, name, price }, restaurant: { name: resName, avgRating, id: resId, sla } } } },


                    {
    data: { 
        card: { card: { info,
            restaurant: { info: menuDetails } } }
    } }

  dishesData?.map(({ card: { card: { info, restaurant } } }, i) => (
                      <Dishesdata info={info} restaurant={restaurant} />
                    ))

                    { info, restaurant: { info: restaurantInfo } }
    

    {/* resposive menu  */}
      <div className="relative">
        <div className={`bg-black/50 w-full h-screen absolute z-40 ${menuBtn ? 'visible' : 'invisible'}`} onClick={handleMenuBtn}>
        </div>
        <div className={`fixed z-50 bg-white w-[27%] h-screen duration-500 ${menuBtn ? 'right-0' : '-right-[100%]'}`}>
          <div className="p-7 flex flex-col gap-5">
            <p className='mt-4 text-white' onClick={handleMenuBtn} >
              <MdClose className="text-black text-[2rem] font-extrabold" />
            </p>
            
            <div className="md:hidden">
              <ul className=" flex flex-col items-center gap-9">
                {
                  navMenu.map((item, index) => (
                    <li key={index}>
                      {
                        item.name === 'sign in' ?
                          <div onClick={handleLoginPage}
                            className={({ isActive }) =>
                              `${isActive ? 'text-gray-600' : 'text-orange-500'} text-[1rem] flex items-center justify-center gap-1 capitalize font-medium hover:text-orange-600`}
                          >
                            <div className="flex gap-2 capitalize">
                              <span className="text-[1.5rem]">
                                {userAuthData ? <img src={userAuthData.photo} /> : item.icon}</span>
                              <span className=" ">{userAuthData ? userAuthData.name : item.name}</span>
                            </div>
                            {item.name === 'cart' && <span>{cart.length}</span>}
                          </div>
                          :
                          <NavLink to={item.path}
                            className={({ isActive }) =>
                              `${isActive ? 'text-gray-600' : 'text-orange-500'} text-[1rem] flex items-center justify-center gap-1 capitalize font-medium hover:text-orange-600`}
                          >
                            <span className=" hidden">{item.icon}</span>
                            <span className="text-[4rem]">{item.name}</span>
                            {item.name === 'cart' && <span>{cart.length}</span>}
                          </NavLink>
                      }

                    </li>
                  ))
                }

              </ul>
              </div>
          </div>
        </div>
      </div>

      () => value > 1100 ? '' : setValue(prev => prev + 100)

       {/* ) : (<RestaurantData data={restaurantsData} />) */}

       (restaurantsData?.map((data, i) => (
                <div key={i}>
                  {
                    data?.card?.card?.info?.promoted ?
                      <PromotedRes data={ data} /> : <RestaurantData data={data} />
                  }
                </div>